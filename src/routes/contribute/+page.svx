---
title: "Site Development"
description:
  "This page is meant to be an introduction to developing a page for the wiki. In it is multiple examples which you can
  examine raw in the [site source code](https://github.com/Datapack-Hub/wiki)."
---

<script lang="ts">
import {Version, TreeRoot, TreeEntry, Highlight} from '$lib/reusables';
</script>

# Site Meta and Contribution

This page is meant to be an introduction for contributors to the wiki. In it is multiple examples which you can examine
unformatted in the [site source code](https://github.com/Datapack-Hub/wiki).

<!-- <TreeRoot>
  <TreeEntry>Hello</TreeEntry>
  <TreeEntry>
    <TreeRoot>
      <TreeEntry>
        <TreeRoot>
          <TreeEntry>Hi</TreeEntry>
        </TreeRoot>
      </TreeEntry>
    </TreeRoot>
  </TreeEntry>
</TreeRoot> -->

**Last Updated:** 12-07-2024 

## Contributing

The full contributing guide is available on a [separate page here](https://github.com/Datapack-Hub/wiki/blob/main/CONTRIBUTING.md).
To contribute, please fork the [Datapack-Hub/wiki](https://github.com/Datapack-Hub/wiki) repo on GitHub, make changes in your fork, then submit a pull
request, explaining your changes.

## Formatting

This section goes over how we format wiki pages. We like to be consistent, so please read through this section carefully and use these features to
your advantage:

### Basic formatting

All content on the website (except navbar, sidebar and things that are not the actual wiki pages) are made using a
technology called mdsvex. This technology enables people like you to insert Markdown along with
[svelte components](https://svelte.dev).

:::tip
It is recommended to know what the proper way to format markdown is in order to stay consistent and prevent confusion. 
If you don't know it off by heart, try taking some of the recommendations from a program like Markdown Lint.
:::

Each page is made of 3 parts:

- front matter (metadata about the page such as title, description, tags, versions, etc.)
- content (the actual content of the page)
- components (custom components that allow for interactivity or other features not able to be reproduced with markdown)

Each is crucial to making the page look and feel how it does.

Along with everything else, there is also a component called `Version` which is used to display the Minecraft version the page is validated and up to date with.

<Version version="1.21.3"/>

We recommend using this component on any page that is validated and up to date with the latest Minecraft version.

### Front Matter

We try to keep the front matter as minimal as possible, but it is still required to be present. Without it, the page will not display correctly on search engines or other sites. 
Front matter may seem daunting, but it is quite simple. The front matter for this page looks like this:

```md
---
title: "Site Development"
description:
  "This page is meant to be an introduction to developing a page for the wiki. In it is multiple examples which you can
  examine raw in the [site source code](https://github.com/Datapack-Hub/wiki)."
---
```

The title should be the same as the title in the sidebar in order to reduce confusion. The description should be a 
short summary of the content of the page in order to show people what all is covered in the article. Some old pages 
might not have a description or the description may be the first line on the page. In many cases this is not optimal, 
so we recommend changing description field to provide a more detailed description of the page.

### Custom Elements

Our markdown system adds unlimited customizability to the way we format our pages. As of the time of writing, we currently have the following features:

- Admonitions
- Code Titles
- MCFunction Formatting *(Thanks Snave!)*
- Highlighting

Admonitions are a way to warnings, info or tips, or other important information to your page.

> :::info
> This is an example of an info box.
> :::

Code blocks are a way to format code in your page. These code blocks come with the option to add a title to the code block for clarity. 
The Datapack Wiki supports syntax highlighting for MCFunction which should be used for code samples whenever possible.

```js:example.js
function example() {
  console.log("Hello World!");
}
```

Highlighting is a way to highlight specific text. It isn't commonly used, but it exists.

> <Highlight color="#DC2626">Highlighted Text</Highlight>
> like this.

### Standardized Elements

As of right now, the wiki uses a few elements that are standardized across the entire wiki. Right now this only consists of command syntax.
You can find the command syntax we use in the [commands page](/wiki/commands/about).

### Formatting Examples

Example Markdown used on the wiki:

```md
# Heading 1

Paragraph text under heading 1

## Heading 2

Paragraph text under heading 2

### Heading 3

Paragraph text under heading 3

Click the link to [go to the main page](/)

I have some `inline code` for you. Here's some more:

- List Item
- Another List Item

1. First List Item
2. Second List Item

| Which page? | How much I hate formatting it? |
| ----------- | ------------------------------ |
| This one    | Very much                      |
| Other ones  | Not as much                    |

## Custom Elements

:::info 
I am a very important piece of information. In this box, you might find educational info, or explanations for
features. 
:::

:::warning 
The stuff in this box is probably very important. You should read this box - it might contain information
which affects your datapack.
:::

:::tip 
You can do this really cool thing. It'll make your life a lot easier! But don't worry - it's only optional.
:::

<Version version="1.21.3"/>
```