---
title: Breaking Changes
description: "A list of breaking changes to datapacks."
version: 1.21.4
---

# List of breaking changes

This is list of all breaking changes to datapacks (excluding resource packs). Special thanks to Misode's Technical
Changelog for the source of many of these.

## 1.21.4
**Item Components**
- Field `model` in [`equippable`](/wiki/concepts/item-components#equippable) component has been renamed to `asset_id`.
- The [`dyed`](/wiki/concepts/item-components#dyed) component now tint's based on the model, not item ID.
- The [`custom_model_data`](/wiki/concepts/item-components#custom_model_data) component has new fields `floats`, `flags`, `strings`, `colors`.
- Item blocks with [`block_entity_data`](/wiki/concepts/item-components#block_entity_data) component will now set block entity data only if id tag matches type of placed block entity

**Renames**
- The `TNTFuse` field of TNT Minecarts has been renamed to `fuse`
- Changed some Furnace, Smoker and Blast Furnace data. From camelCase to snake_case.
   * Renamed `CookTime` to `cooking_time_spent`
   * Renamed `CookTimeTotal` to `cooking_total_time`
   * Renamed `BurnTime` to `lit_time_remaining`

**Other**
- Removed `#tall_flowers` block tag. With that the `#flowers` and `#tall_flowers` item tags were also removed.
- The `trail` particle has a new required field: `duration` - Indicates, in ticks, for how long the particles should travel to its destination.
- üé® The item model resource pack format got completely changed, now allowing for tinting, layered, conditional, and much more!

## 1.21.2
**Item Components**
- The [`food`](/wiki/concepts/item-components#food) item component no longer automatically allows for consumption of food, and now only holds the data relating to it (meaning `nutrition`, `saturation` and `can_always_eat` are the only fields left in the component)
  - üõ†Ô∏è To fix this, just add the [`consumable`](/wiki/concepts/item-components#consumable) component: `consumable={}`. You can customize this component even more, you can read about it [here](/wiki/concepts/item-components#consumable).
- The [`lock`](/wiki/concepts/item-components#lock) has been changed into an item predicate, with a format of `lock={ITEM_PREDICATE}`
  - üõ†Ô∏è The previous `lock="MyKey"` would now look like `lock={components:{"minecraft:custom_name":"'MyKey'"}}`
- The `fire_resistant` component has been renamed to [`damage_resistant`](/wiki/concepts/item-components#damage_resistant), with a new field
  - `types` - A `#` damage type tag. Items in entity form or worn by players with this component will be resistant to the damage types included in the tag.

**Loot Tables**
- The `/loot` command now returns an error when trying to drop from block without loot table (like air)
- The special loot table `empty` has been removed.
- Sheep now always use a single loot table `entities/sheep`, but wool drops are still defined in sub-tables in  `entities/sheep/<color>`

**Other**
- Attribute IDs now don't have the `generic.`, `player.` or `zombie.` prefixes anymore (`generic.scale` ‚Üí `scale`).
- `boat` and `chest_boat` entity types have been split into separate types, one per variant (`Type=oak` ‚Üí
`minecraft:oak_boat`,...)
  - With that the `minecraft:boat` entity sub-predicate has been removed.
- The previous `Lock` field of containers has been renamed to `lock` and is now an item predicate.
- You now cannot ride Leash Knots, Lighting Bolts and Fishing Bobbers with `/ride` command.
- The `killed_by_crossbow` advancement was renamed to `killed_by_arrow`, and will now trigger whenever an arrow kills an entity, not just when fired from a crossbow.
- Renamed effect type `damage_item` to `change_item_damage`, which now also supports negative amounts.
- Removed liquid carvers and changed biome format (the `carvers` field is now just a list of carvers)

## 1.21
**General Renames**
- All folders which previously had plural names (except `tags`) now have singular names. A list of all changed folders can be found below:
    - `structures` ‚Üí `structure`
    - `advancements` ‚Üí `advancement`
    - `recipes` ‚Üí `recipe`
    - `loot_tables` ‚Üí `loot_table`
    - `predicates` ‚Üí `predicate`
    - `item_modifiers` ‚Üí `item_modifier`
    - `functions` ‚Üí `function`
    - `tags/functions` ‚Üí `tags/function`
    - `tags/items` ‚Üí `tags/item`
    - `tags/blocks` ‚Üí `tags/block`
    - `tags/entity_types` ‚Üí `tags/entity_type`
    - `tags/fluids` ‚Üí `tags/fluid`
    - `tags/game_events` ‚Üí `tags/game_event`
- The `uuid` and `name` arguments have been replaced with a singular namespaced `id` argument.
  - üõ†Ô∏è For example: `attribute ... modifier add <uuid> <name> 0.5 add_value` would now look like `attribute ... modifier add <namespace:id> 0.5 add_value`

**Entity NBT**
- Entity attribute format has changed:
  - `Attributes` ‚Üí `attributes`
    - `Name` ‚Üí `id`
    - `Base` ‚Üí `base`
    - `Modifiers` ‚Üí `modifiers` *(Now stores modifiers in the same format as modifiers in the [`minecraft:attribute_modifiers`](https://minecraft.fandom.com/wiki/concepts/item-components#attribute_modifiers) item component)*
      - `UUID` ‚Üí `uuid`
      - `Name` ‚Üí `id`
      - `Amount` ‚Üí `amount`
      - `Operation` ‚Üí `operation` *(This is now a named constant instead of an int)*
        - `add_value` - now a string, previously `0`
        - `add_multiplied_base` - now a string, previously `1`
        - `add_multiplied_total` - now a string, previously `2`
  - üõ†Ô∏è For example: `summon ... {Attributes:[{Name:"generic.scale",Base:2,Modifiers:[{UUID:[I;1,0,0,0],Name:"example_modifier",Amount:1,Operation:0}]}]}` would now look like `summon ... {attributes:[{id:"generic.scale",base:2,modifiers:[{id:"tutorial:example_modifier",amount:1,operation:"add_value"}]}]}`
- Replaced the `power` NBT tag with an `acceleration_power` tag. This controls the projectile's acceleration (and maximum speed).
  - This applies to: `dragon_fireball`, `large_fireball`, `small_fireball`, `fireball`, `breeze_wind_charge`, `wind_charge`, `wither_skull`.
- The field `ShotFromCrossbow` from projectile NBT has been removed. A new `weapon` field has been added to replace this feature.
  - üõ†Ô∏è For example: `@e[type=arrow,nbt={ShotFromCrossbow:1b}]` would now look like `@e[type=arrow,nbt={weapon:{id:"minecraft:crossbow"}}]`

**Tags**
- Removed the `#minecraft:music_discs` item tag

**Predicates**
- Some predicate fields have been renamed:
  - `killer` ‚Üí `attacker`
  - `direct_killer` ‚Üí `direct_attacker`
  - `killer_player` ‚Üí `attacking_player`
- The `random_chance_with_looting` has been renamed (because it's now controlled by enchantments) to `random_chance_with_enchanted_bonus`. The fields were updated accordingly:
  - The `looting_multiplier` field has been removed
  - The `chance` field has been removed.
  - `enchantment` - is a new field containing the namespaced:id of the Enchantment that grants the bonus chance
  - `enchanted_chance` is a new field for the chance for an enchanted item. A level-based value.
  - `unenchanted_chance` - is a new field specifying the chance for an unenchanted item.
- If you are testing for an enchantment on your item, the field `enchantment` ‚Üí `enchantments`. Can be either an Enchantment, a list of Enchantments or an #Enchantment Tag.

**Item Modifiers**
- The `looting_enchant` field has been replaced by `enchanted_count_increase`. This has a new field `enchantment` (specifies which enchantment).
- Under `enchant_randomly` the field `enchantments` is now called `options`.
- Under `enchant_with_levels` the field `treasure` was removed.
- Under `copy_name` the field `killer` ‚Üí `attacking_entity` and `killer_player` ‚Üí `last_damage_player`

## 1.20.2
- Entity effects in NBT now use namespaced IDs instead of numbers.
- The structure for entity effects in NBT has been changed from `PascalCase` to `snake_case`.
  - For mob effect instances:
    - `Id` ‚Üí `id`
    - `Ambient` ‚Üí `ambient`
    - `Amplifier` ‚Üí `amplifier`
    - `Duration` ‚Üí `duration`
    - `ShowParticles` ‚Üí `show_particles`
    - `ShowIcon` ‚Üí `show_icon`
    - `HiddenEffect` ‚Üí `hidden_effect`
    - `FactorCalculationData` ‚Üí `factor_calculation_data`
  - For others:
    - `CustomPotionEffects` ‚Üí `custom_potion_effects` (potion, lingering_potion, splash_potion, tipped_arrow, arrow)
    - `Effects` ‚Üí `effects` (suspicious_stew, area_effect_cloud)
    - `EffectId` ‚Üí id` (suspicious_stew)
    - `EffectDuration` ‚Üí `duration` (suspicious_stew)
    - `EffectId` and `EffectDuration` ‚Üí stew_effects (mooshroom)
    - `ActiveEffects` ‚Üí `active_effects` (player, armor_stand, mobs)
    - `Primary` ‚Üí `primary_effect` (beacon)
    - `Secondary` ‚Üí `secondary_effect` (beacon)
