---
title: Recipes for your Custom Items
description: "If you've ever wanted to add custom crafting recipes to your items, here is exactly how to do that!"
---

<script lang="ts">
import {Version} from '$lib/reusables';
</script>

<Version>This page is validated and up to date with Minecraft Java: 1.21</Version>

# Creating Recipes for your Custom Items

There are two ways to add recipes to your custom items, they differentiate based on what Minecraft version you are developing for. The first one is for the Minecraft version 1.20.5+ (Datapack format 34+), here items can be directly specified in the output with [item components](/wiki/commands/item_components). The second method is for all version before 1.20.5.

## After 1.20.5

This is the easier method of the two, only requiring you to put the item id and components into the recipe output.

:::info
Note that there is currently no way to specify item components in the recipe's input items, only in the result. Meaning you custom item can't (easily) be crafted out of different custom items.
:::

The instructions here will be very simple, requiring you to only create one file, that being the actual crafting recipe file. This file can be named whatever, but has to end in the `.json` file format.

Here is an example of a recipe with the output of a custom item:

```json:scuteaxe.json
{
  "type": "minecraft:crafting_shaped",
  "pattern": [
    "ttt",
    " s ",
    " s "
  ],
  "key": {
    "t": {
      "item": "minecraft:turtle_scute"
    },
    "s": {
      "item": "minecraft:stick"
    }
  },
  "result": {
    "id": "minecraft:iron_pickaxe",
    "count": 1,
    "components": {
      "minecraft:tool": {
        "rules": [
          {
            "blocks": "minecraft:turtle_egg",
            "speed": 6,
            "correct_for_drops": true
          }
        ],
        "default_mining_speed": 3,
        "damage_per_block": 1
      },
      "minecraft:item_name": "\"{\\\"text\\\":\\\"sCUTE-axe\\\"}\""
    }
  }
}
```

In the example, you can see that the result has a `"components"` field, where you can list the components that your custom item should have. I can also recommend a useful site for generating recipes with specified components: https://misode.github.io/recipe/

## Before 1.20.5

**This part of the guide assumes that you already knowledge some basic commands and how crafting recipes and advancements work.**

To create a crafting recipe for one of your custom items, you need just a little bit more than for a normal recipe. This is because of the fact that you coudn't use NBT in recipes before 1.20.5 dropped, so thats why we need a small workaround.

Lets create the recipe first:

```json:scuteaxe.json
{
    "type": "minecraft:crafting_shaped",
    "pattern": [
        "ttt",
        " s ",
        " s "
    ],
    "key": {
        "t": {
            "item": "minecraft:turtle_scute"
        },
        "s": {
            "item": "minecraft:stick"
        }
    },
    "result": {
        "item": "minecraft:knowledge_book"
    }
}
```

As mentioned before, we can't use the custom item as output, so we use the knowledge book as a placeholder.

To switch the knowledge book with our custom item, we need an advancement to react when we craft the recipe. For this we use the `recipe_crafted` trigger.
_With some trickery, here it is also possible to make the ingredients require certain nbt._

```json:craft_scuteaxe.json
{
    "criteria": {
        "requirement": {
            "trigger": "minecraft:recipe_crafted",
            "conditions": {
                "recipe_id": "<namespace>:scuteaxe"
            }
        }
    },
    "rewards": {
        "function": "<namespace>:craft_scuteaxe"
    }
}
```

Lasty we have to make the actual function that handles the item switching.
You can either use a `give` command or, what I recommend more, define the item in a separate loot table and then use the `loot` command.

```mcfunction:craft_scuteaxe.mcfunction
clear @s knowledge_book
advancement revoke @s only <namespace>:craft_scuteaxe
# Any code can go here, this will run when the player crafts the item.
loot give @s loot <namespace>:<scuteaxe_item_loot_table>
# You can also you a give command here instead
```

:::tip
If you want to create more recipes, you can just copy, rename and configure all the files we've just created.
:::

And that's it, you should now have a custom working recipe for your item.
